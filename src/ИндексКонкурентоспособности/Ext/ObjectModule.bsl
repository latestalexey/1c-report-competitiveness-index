
////////////////////////////////////////////////////////////////////////////////

// 
////
Функция СведенияОВнешнейОбработке() Экспорт 
	
	ТаблицаЗначений = Новый ТаблицаЗначений; 
	ТаблицаЗначений.Колонки.Добавить("Представление", 		 Новый ОписаниеТипов("Строка")); 
	ТаблицаЗначений.Колонки.Добавить("Идентификатор", 		 Новый ОписаниеТипов("Строка")); 
	ТаблицаЗначений.Колонки.Добавить("Использование", 		 Новый ОписаниеТипов("Строка")); 
	ТаблицаЗначений.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево")); 
	ТаблицаЗначений.Колонки.Добавить("Модификатор", 		 Новый ОписаниеТипов("Строка"));
	
	СтрокаТаблицыЗначений = ТаблицаЗначений.Добавить(); 
	СтрокаТаблицыЗначений.Представление 	   = Метаданные().Представление(); 
	СтрокаТаблицыЗначений.Идентификатор 	   = Метаданные().ПолноеИмя(); 
	СтрокаТаблицыЗначений.Использование 	   = "ОткрытиеФормы"; 
	СтрокаТаблицыЗначений.ПоказыватьОповещение = Ложь; 
	СтрокаТаблицыЗначений.Модификатор 		   = ""; 

	Структура = Новый Структура; 
	Структура.Вставить("Вид", 			  "ДополнительныйОтчет");
	Структура.Вставить("Версия", 		  "1.0"); 
	Структура.Вставить("Наименование", 	  Метаданные().Представление()); 
	Структура.Вставить("Информация", 	  Метаданные().Представление());
	Структура.Вставить("БезопасныйРежим", Истина);
	Структура.Вставить("Команды", 		  ТаблицаЗначений);
	
	Возврат Структура

КонецФункции 



////////////////////////////////////////////////////////////////////////////////

// 
////
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	НачалоПериода = Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода").Значение.Дата;
	КонецПериода  = Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода").Значение.Дата;
	
	
	Коннектор  = Новый COMОбъект("V83.COMConnector");	
	//Соединение = Коннектор.Connect("File=""Path"";Usr=""login"";Pwd=""password"";");
	Соединение = Коннектор.Connect("Srvr=""server"";Ref=""base"";Usr=""login"";Pwd=""password"";");
	
		
	ТаблицаЦен 		   = ПолучитьТаблицуЦен(Соединение, КонецПериода);
	ТаблицаПродаж 	   = ПолучитьТаблицуПродаж(Соединение, НачалоПериода, КонецПериода);
	ТаблицаОстатков    = ПолучитьТаблицуОстатков(Соединение, КонецПериода); 		
	ТаблицаКонкурентов = ПолучитьТаблицуКонкурентов(НачалоПериода, КонецПериода);
	
	
	Соединение = Неопределено;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаЦен.МагазинУИД 	   КАК МагазинУИД,
		|	ТаблицаЦен.НоменклатураУИД КАК НоменклатураУИД,
		|	ТаблицаЦен.Цена 		   КАК Цена
		|ПОМЕСТИТЬ 
		|	ВТ_ТаблицаЦен
		|ИЗ
		|	&ТаблицаЦен КАК ТаблицаЦен
		|;
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПродаж.МагазинУИД 	  КАК МагазинУИД,
		|	ТаблицаПродаж.НоменклатураУИД КАК НоменклатураУИД,
		|	ТаблицаПродаж.Количество 	  КАК Количество
		|ПОМЕСТИТЬ 
		|	ВТ_ТаблицаПродаж
		|ИЗ
		|	&ТаблицаПродаж КАК ТаблицаПродаж
		|;
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.МагазинУИД 		КАК МагазинУИД,
		|	ТаблицаОстатков.НоменклатураУИД КАК НоменклатураУИД,
		|	ТаблицаОстатков.Количество 		КАК Количество
		|ПОМЕСТИТЬ 
		|	ВТ_ТаблицаОстатков
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКонкурентов.Магазин 		   КАК Магазин,
		|	ТаблицаКонкурентов.МагазинУИД 	   КАК МагазинУИД,
		|	ТаблицаКонкурентов.Конкурент 	   КАК Конкурент,
		|	ТаблицаКонкурентов.Номенклатура    КАК Номенклатура,
		|	ТаблицаКонкурентов.НоменклатураУИД КАК НоменклатураУИД,
		|	ТаблицаКонкурентов.Цена 		   КАК Цена
		|ПОМЕСТИТЬ 
		|	ВТ_ТаблицаКонкурентов
		|ИЗ
		|	&ТаблицаКонкурентов КАК ТаблицаКонкурентов
		|;
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаКонкурентов.Магазин 			   КАК Магазин,
		|	ВТ_ТаблицаКонкурентов.Конкурент 		   КАК Конкурент,
		|	ВТ_ТаблицаКонкурентов.Номенклатура 		   КАК Номенклатура,
		|	ВТ_ТаблицаКонкурентов.Цена 				   КАК ЦенаКонкурента,
		|	ЕСТЬNULL(ВТ_ТаблицаОстатков.Количество, 0) КАК Остаток,
		|	ЕСТЬNULL(ВТ_ТаблицаПродаж.Количество, 0)   КАК Продажи,
		|	ЕСТЬNULL(ВТ_ТаблицаЦен.Цена, 0) 		   КАК ЦенаМагазина
		|ИЗ
		|	ВТ_ТаблицаКонкурентов КАК ВТ_ТаблицаКонкурентов
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|	ВТ_ТаблицаОстатков КАК ВТ_ТаблицаОстатков
		|	ПО ВТ_ТаблицаКонкурентов.МагазинУИД = ВТ_ТаблицаОстатков.МагазинУИД И
		|	   ВТ_ТаблицаКонкурентов.НоменклатураУИД = ВТ_ТаблицаОстатков.НоменклатураУИД
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|	ВТ_ТаблицаПродаж КАК ВТ_ТаблицаПродаж
		|	ПО ВТ_ТаблицаКонкурентов.МагазинУИД = ВТ_ТаблицаПродаж.МагазинУИД И
		|	   ВТ_ТаблицаКонкурентов.НоменклатураУИД = ВТ_ТаблицаПродаж.НоменклатураУИД
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|	ВТ_ТаблицаЦен КАК ВТ_ТаблицаЦен
		|	ПО ВТ_ТаблицаКонкурентов.МагазинУИД = ВТ_ТаблицаЦен.МагазинУИД И
		|	   ВТ_ТаблицаКонкурентов.НоменклатураУИД = ВТ_ТаблицаЦен.НоменклатураУИД
		|ГДЕ
		|	ЕСТЬNULL(ВТ_ТаблицаОстатков.Количество, 0) > 0 И
		|	ЕСТЬNULL(ВТ_ТаблицаЦен.Цена, 0) > 0 И
		|	ВТ_ТаблицаКонкурентов.Цена > 0
		|";
	Запрос.УстановитьПараметр("НачалоПериода", 	 	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 	 	КонецПериода);
	Запрос.УстановитьПараметр("ТаблицаЦен", 	 	ТаблицаЦен);
	Запрос.УстановитьПараметр("ТаблицаПродаж", 	 	ТаблицаПродаж);
	Запрос.УстановитьПараметр("ТаблицаОстатков", 	ТаблицаОстатков);
	Запрос.УстановитьПараметр("ТаблицаКонкурентов", ТаблицаКонкурентов);
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	 		
	ДанныеРасшифровкиКомпоновкиДанных = Новый ДанныеРасшифровкиКомпоновкиДанных; 
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, Новый Структура("ТаблицаЗначений", ТаблицаЗначений), ДанныеРасшифровкиКомпоновкиДанных);
		
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////

// 
////
Функция ПолучитьТаблицуЦен(Соединение, КонецПериода) 
	
	Запрос = Соединение.NewObject("Query");
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыМагазинов.Магазин 	   КАК Магазин,
		|	ЦеныНоменклатурыМагазинов.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыМагазинов.Цена 		   КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыМагазинов.СрезПоследних(КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)) КАК ЦеныНоменклатурыМагазинов
		|";
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("МагазинУИД", 		Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40)));  
	ТаблицаЗначений.Колонки.Добавить("НоменклатураУИД", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40)));  
	ТаблицаЗначений.Колонки.Добавить("Цена", 			Новый ОписаниеТипов("Число", , ,    Новый КвалификаторыЧисла(15, 2)));
	
	Для Каждого СтрокаТабличнойЧасти Из Результат Цикл
		НоваяСтрока = ТаблицаЗначений.Добавить(); 
		НоваяСтрока.МагазинУИД 	 	= Соединение.String(СтрокаТабличнойЧасти.Магазин.UUID());
		НоваяСтрока.НоменклатураУИД = Соединение.String(СтрокаТабличнойЧасти.Номенклатура.UUID());
		НоваяСтрока.Цена 			= Число(СтрокаТабличнойЧасти.Цена);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

// 
////
Функция ПолучитьТаблицуПродаж(Соединение, НачалоПериода, КонецПериода) 
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Продажи.Склад.Магазин 	 КАК Магазин,
		|	Продажи.Номенклатура 	 КАК Номенклатура,
		|	Продажи.КоличествоОборот КАК Количество
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)) КАК Продажи
		|";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("МагазинУИД", 		Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40))); 
	ТаблицаЗначений.Колонки.Добавить("НоменклатураУИД", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40)));  
	ТаблицаЗначений.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число", , ,    Новый КвалификаторыЧисла(15, 2)));
	
	Для Каждого СтрокаТабличнойЧасти Из Результат Цикл
		НоваяСтрока = ТаблицаЗначений.Добавить(); 
		НоваяСтрока.МагазинУИД 	 	= Соединение.String(СтрокаТабличнойЧасти.Магазин.UUID());
		НоваяСтрока.НоменклатураУИД = Соединение.String(СтрокаТабличнойЧасти.Номенклатура.UUID());
		НоваяСтрока.Количество		= Число(СтрокаТабличнойЧасти.Количество);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
		
КонецФункции

// 
////
Функция ПолучитьТаблицуОстатков(Соединение, КонецПериода) 
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТоварыНаСкладах.Склад.Магазин	  КАК Магазин,
		|	ТоварыНаСкладах.Номенклатура	  КАК Номенклатура,
		|	ТоварыНаСкладах.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), ) КАК ТоварыНаСкладах
		|";
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("МагазинУИД", 		Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40))); 
	ТаблицаЗначений.Колонки.Добавить("НоменклатураУИД", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40))); 
	ТаблицаЗначений.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число", , ,    Новый КвалификаторыЧисла(15, 2)));

	Для Каждого СтрокаТабличнойЧасти Из Результат Цикл
		НоваяСтрока = ТаблицаЗначений.Добавить(); 
		НоваяСтрока.МагазинУИД 	 	= Соединение.String(СтрокаТабличнойЧасти.Магазин.UUID());
		НоваяСтрока.НоменклатураУИД = Соединение.String(СтрокаТабличнойЧасти.Номенклатура.UUID());
		НоваяСтрока.Количество		= Число(СтрокаТабличнойЧасти.Количество);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

// 
////
Функция ПолучитьТаблицуКонкурентов(НачалоПериода, КонецПериода) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Запрос.Номенклатура 				   КАК Номенклатура,
		|	Запрос.Конкурент 					   КАК Конкурент,
		|	РезультатыСопоставления.ЦенаКонкурента КАК Цена
		|ПОМЕСТИТЬ 
		|	ВТ_РезультатыСопоставления
		|ИЗ (
			|ВЫБРАТЬ
			|	РезультатыСопоставления.Номенклатура 			  КАК Номенклатура,
			|	РезультатыСопоставления.Конкурент 				  КАК Конкурент,
			|	МАКСИМУМ(РезультатыСопоставления.ДатаМониторинга) КАК Дата
			|ИЗ
			|	РегистрСведений.РезультатыСопоставления КАК РезультатыСопоставления
			|ГДЕ
			|	РезультатыСопоставления.ДатаМониторинга МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)
			|СГРУППИРОВАТЬ ПО
			|	РезультатыСопоставления.Номенклатура,
			|	РезультатыСопоставления.Конкурент ) КАК Запрос
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|	РегистрСведений.РезультатыСопоставления КАК РезультатыСопоставления
		|	ПО Запрос.Номенклатура = РезультатыСопоставления.Номенклатура И
		|	   Запрос.Конкурент = РезультатыСопоставления.Конкурент И
		|	   Запрос.Дата = РезультатыСопоставления.ДатаМониторинга
		|ИНДЕКСИРОВАТЬ ПО
	    |	Конкурент
		|;
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонкурентыМагазины.Магазин 				  КАК Магазин,
		|	КонкурентыМагазины.Ссылка 				  КАК Конкурент,
		|	ВТ_РезультатыСопоставления.Номенклатура   КАК Номенклатура,
		|	ВТ_РезультатыСопоставления.Цена 		  КАК Цена
		|ИЗ
		|	Справочник.Конкуренты.Магазины КАК КонкурентыМагазины
		|ПРАВОЕ СОЕДИНЕНИЕ 
		|	ВТ_РезультатыСопоставления КАК ВТ_РезультатыСопоставления
		|	ПО КонкурентыМагазины.Ссылка = ВТ_РезультатыСопоставления.Конкурент
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Магазин,
		|	Цена
		|";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Магазин",			Новый ОписаниеТипов("СправочникСсылка.Магазины")); 
	ТаблицаЗначений.Колонки.Добавить("МагазинУИД", 		Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40)));  
	ТаблицаЗначений.Колонки.Добавить("Номенклатура",	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаЗначений.Колонки.Добавить("НоменклатураУИД", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(40)));  
	ТаблицаЗначений.Колонки.Добавить("Конкурент",		Новый ОписаниеТипов("СправочникСсылка.Конкуренты"));
	ТаблицаЗначений.Колонки.Добавить("Цена", 			Новый ОписаниеТипов("Число", , ,    Новый КвалификаторыЧисла(15, 2)));
	
	Магазин 	 = Неопределено;
	Номенклатура = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Магазин <> Магазин ИЛИ
			 Выборка.Номенклатура <> Номенклатура Тогда
			НоваяСтрока = ТаблицаЗначений.Добавить();
			НоваяСтрока.Магазин         = Выборка.Магазин;
			НоваяСтрока.МагазинУИД 	  	= Строка(Выборка.Магазин.УникальныйИдентификатор());
			НоваяСтрока.Номенклатура    = Выборка.Номенклатура;
			НоваяСтрока.НоменклатураУИД = Строка(Выборка.Номенклатура.УникальныйИдентификатор());
			НоваяСтрока.Конкурент       = Выборка.Конкурент;
			НоваяСтрока.Цена            = Выборка.Цена;
		КонецЕсли;
		
		Номенклатура = Выборка.Номенклатура;
		Магазин      = Выборка.Магазин;
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
	
КонецФункции
